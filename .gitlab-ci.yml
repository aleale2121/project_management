stages:
  - test
  - deploy

UnitTest:
  image: python:3.8.10
  stage: test
  before_script:
    - pip install -r requirements.txt
    - python app/manage.py makemigrations
    - python app/manage.py migrate
    - python app/manage.py collectstatic --no-input
    - python app/manage.py runserver 8000 &
  when: on_success
  script:
    - echo "Starting tests..."
    - rm -f coverage.xml
    - coverage erase
    - SSLCONF="?sslmode=require"
    - echo "$TEST_DATABASE_URL$SSLCONF"
    # -----------DEPENDS ON YOUR DJANGO APP NAMES---------
    - DATABASE_URL="$TEST_DATABASE_URL$SSLCONF" coverage run --branch --source=users  app/manage.py test --keepdb
    # ----------------------------------------------------
    - coverage xml -i
    - coverage report -m
  artifacts:
    paths:
      - coverage.xml

DeploymentStaging:
  image: ruby:3.1.0
  stage: deploy
  before_script:
    - gem install dpl
    - wget -qO- https://cli-assets.heroku.com/install-ubuntu.sh | sh
  script:
    - dpl --provider=heroku --app=$HEROKU_APPNAME --api-key=$HEROKU_APIKEY
    - export HEROKU_API_KEY=$HEROKU_APIKEY
    - heroku run --app $HEROKU_APPNAME migrate
  environment:
    name: staging
    url: $HEROKU_APP_HOST
  except:
    changes:
      - "README.md"
  only:
    - master