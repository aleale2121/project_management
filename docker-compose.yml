version: "3"

services:
  app:
    build:
      context: .
    image: app-image
    container_name: app
    hostname: app
    restart: on-failure
    ports:
      - "8000:8000"
    volumes:
      - ./app:/app
    command: >
      sh -c "wait-for db:5432 && wait-for rabbit:5672 &&
             python3 manage.py makemigrations &&
             python3 manage.py migrate &&
             python3 manage.py runserver 0.0.0.0:8000"
    environment:
      - DB_HOST=db
      - DB_NAME=app
      - DB_USER=postgres
      - DB_PASS=supersecretpassword
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      
    stdin_open: true
    tty: true
    depends_on:
      - db
      - rabbit
      - redis
    links:
      - db
      - rabbit
      - redis
    networks:
      - shared_network

  rabbit:
    image: rabbitmq:3-management
    container_name: rabbit
    restart: on-failure
    hostname: rabbit
    environment:
      - RABBITMQ_DEFAULT_USER=admin
      - RABBITMQ_DEFAULT_PASS=admin
      - RABBITMQ_DEFAULT_VHOST=/
    ports:
      - "5682:5672"
      - "15682:15672"
    networks:
      - shared_network

  worker:
    image: app-image
    restart: on-failure
    command: >
      sh -c "wait-for app:8000 && celery -A app.celery worker -B -l info  -s /tmp/celerybeat-schedule"
    depends_on:
      - app
      - rabbit
      - db
    networks:
      - shared_network

  db:
    image: postgres:14-alpine
    container_name: db
    restart: on-failure
    hostname: db
    environment:
      - POSTGRES_DB=app
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=supersecretpassword
    ports:
      - "5432:5432"
    networks:
      - shared_network
    volumes: 
      - db:/var/lib/postgresql/data
  redis:
    image: redis:7.0-alpine
    restart: on-failure
    hostname: redis
    command: redis-server --save 30 1 --loglevel debug
    ports:
      - "6379:6379"
    volumes: 
      - cache:/data
networks:
  shared_network:
    driver: bridge
volumes:
  db:
    driver: local
  cache:
    driver: local

